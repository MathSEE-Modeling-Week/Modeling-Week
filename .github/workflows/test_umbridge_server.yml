name: Run Jupyter Notebooks

on: [push, pull_request]

jobs:
  execute-notebooks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install papermill jupyter numpy matplotlib scipy pytest umbridge

    - name: Run UM-Bridge Servers as Notebooks
      run: |
        exit_code=0
        summary=""
        script_path="test_client/default_client.py"

        # Make sure globstar is enabled
        shopt -s globstar
        for notebook in test_client/*.ipynb; do # Whitespace-safe and recursive
            echo "======================"
            echo "Running $notebook:"
            echo ""

            # Run the notebook in the background
            papermill --progress-bar --cwd "$(dirname "$notebook")" "$notebook" "$notebook"_output.ipynb > /dev/null &
            notebook_pid=$!

            # Sleep for 10 seconds
            sleep 10

            # Run the .py script
            python $script_path
            script_exit_code=$?





            echo ""

            if [ $script_exit_code -eq 0 ]; then
              echo "$script_path completed successfully."
              summary="$summary\nNotebook $notebook successful"
              echo "Das ist der exit code: $exit_code"
            else
              echo "Error: $script_path failed with exit code $script_exit_code."
              summary="$summary\nNotebook $notebook FAILED!"
              echo "Das ist der exit code: $exit_code"
            fi

            # Terminate the notebook process
            kill -SIGTERM $notebook_pid
            wait $notebook_pid 2>/dev/null
            echo "Notebook $notebook terminated successfully."





            

            #echo ""

            #if [ $script_exit_code -eq 0 ]; then
            #  echo "$script_path completed successfully."
              # Terminate the notebook process if the script was successful
           #   kill -SIGTERM $notebook_pid
            #  wait $notebook_pid 2>/dev/null
             # echo "Notebook $notebook terminated successfully."
            #else
              #echo "$script_path failed."
              # If the script fails, let the notebook continue or handle accordingly
            #fi

            #if [ $script_exit_code -eq 0 ]; then
             #   echo "Notebook $notebook successful."
              #  summary="$summary\nNotebook $notebook successful"
            #else
             #   echo "Notebook $notebook FAILED!"
              #  summary="$summary\nNotebook $notebook FAILED!"
            #fi

            exit_code=$(($exit_code + $script_exit_code)) # Simply add exit codes; will be zero if all tests successful
            echo "Das ist der exit code: $exit_code"
        done

        echo "======================"
        echo -e $summary
        echo ""

        if [ $exit_code -eq 0 ]; then
            echo "All notebooks successful."
        else
            echo "Some notebooks FAILED!"
        fi

        exit $exit_code
